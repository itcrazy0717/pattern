package com.learning.pattern.prototype;
/**
 * 原型模式
 * 是指通过指定创建对象的种类，通过拷贝原型创建新的对象
 * 也就是通过一种类，拷贝出新的对象
 * 涉及角色：client角色、抽象原型角色、具体原型角色
 * 适用场景：
 * 1.类初始化消耗资源过多
 * 2.new产生一个对象需要非常繁琐的过程（数据准备、访问权限）
 * 3.构造函数比较复杂
 * 4.循环体中，生产大量对象，可读性下降
 * 原型模式就是如何快速构建对象的方法总结
 * 有浅克隆和深克隆两种形式
 * 主要区别：在克隆对象中如果存在引用类型，修改克隆对象中的内容也会影响到源对象
 * 如果需要一个完全不同的对象，就可以选择深克隆，否则选择浅克隆
 */